{"version":3,"sources":["../src/utils/license-utils.js"],"names":["getLicenses","directory","options","baseDir","excludedDependencies","includeDependencies","includeDevDependencies","depth","Infinity","dependencies","devDependencies","packageInfo","currentLicense","newExcludedDependencies","label","includes","mergeLicenses","newOptions","childLicenses","getChildLicenses","childDevLicenses","allChildLicenses","flat","isSelf","excludeSelf","childDirectories","Object","keys","Promise","all","filter","isFound","map"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,eAAeA,WAAf,CAA2BC,SAA3B,EAAsCC,OAAtC,EAA+CC,OAAO,GAAGF,SAAzD,EAAoE;AACzE,QAAM;AACJG,IAAAA,oBAAoB,GAAG,EADnB;AAEJC,IAAAA,mBAAmB,GAAG,IAFlB;AAGJC,IAAAA,sBAAsB,GAAG,KAHrB;AAIJC,IAAAA,KAAK,GAAGC;AAJJ,MAKFN,OALJ;AAMA,QAAM;AAACO,IAAAA,YAAD;AAAeC,IAAAA,eAAf;AAAgC,OAAGC;AAAnC,MAAkD,MAAM,kCAAYV,SAAZ,CAA9D;AACA,QAAMW,cAAc,GAAG,qCAAeD,WAAf,CAAvB;AACA,QAAME,uBAAuB,GAAG,CAAC,GAAGT,oBAAJ,EAA0BQ,cAAc,CAACE,KAAzC,CAAhC;;AAEA,MAAIV,oBAAoB,CAACW,QAArB,CAA8BH,cAAc,CAACE,KAA7C,CAAJ,EAAyD;AACvD,WAAOE,aAAa,CAACd,OAAD,EAAUD,SAAV,EAAqBE,OAArB,CAApB;AACD,GAFD,MAEO;AACL,UAAMc,UAAU,GAAG,EAAC,GAAGf,OAAJ;AAAaE,MAAAA,oBAAoB,EAAES,uBAAnC;AAA4DN,MAAAA,KAAK,EAAEA,KAAK,GAAG;AAA3E,KAAnB;AACA,UAAMW,aAAa,GAAGb,mBAAmB,GAAG,MAAMc,gBAAgB,CAACV,YAAD,EAAeQ,UAAf,EAA2BhB,SAA3B,EAAsCE,OAAtC,CAAzB,GAA0E,EAAnH;AACA,UAAMiB,gBAAgB,GAAGd,sBAAsB,GAAG,MAAMa,gBAAgB,CAACT,eAAD,EAAkBO,UAAlB,EAA8BhB,SAA9B,EAAyCE,OAAzC,CAAzB,GAA6E,EAA5H;AACA,UAAMkB,gBAAgB,GAAG,CAAC,GAAGH,aAAa,CAACI,IAAd,EAAJ,EAA0B,GAAGF,gBAAgB,CAACE,IAAjB,EAA7B,CAAzB;AACA,WAAON,aAAa,CAACC,UAAD,EAAahB,SAAb,EAAwBE,OAAxB,EAAiCS,cAAjC,EAAiDS,gBAAjD,CAApB;AACD;AACF;;AAED,SAASL,aAAT,CAAuBd,OAAvB,EAAgCD,SAAhC,EAA2CE,OAA3C,EAAoDS,cAApD,EAAoEM,aAAa,GAAG,EAApF,EAAwF;AACtF,QAAMK,MAAM,GAAGtB,SAAS,KAAKE,OAA7B;AACA,QAAM;AAACqB,IAAAA,WAAW,GAAG;AAAf,MAAuBtB,OAA7B;;AACA,MAAKqB,MAAM,IAAIC,WAAX,IAA2BZ,cAAc,IAAI,IAAjD,EAAuD;AACrD,WAAOM,aAAP;AACD,GAFD,MAEO;AACL,WAAO,CAACN,cAAD,EAAiB,GAAGM,aAApB,CAAP;AACD;AACF;;AAED,eAAeC,gBAAf,CAAgCV,YAAhC,EAA8CP,OAA9C,EAAuDD,SAAvD,EAAkEE,OAAlE,EAA2E;AACzE,QAAM;AAACI,IAAAA;AAAD,MAAUL,OAAhB;;AACA,MAAIK,KAAK,KAAK,CAAV,IAAeE,YAAY,IAAI,IAAnC,EAAyC;AACvC,WAAO,EAAP;AACD,GAFD,MAEO;AACL,UAAMgB,gBAAgB,GAAG,MAAM,oDAA8BC,MAAM,CAACC,IAAP,CAAYlB,YAAZ,CAA9B,EAAyDR,SAAzD,EAAoEE,OAApE,CAA/B;AACA,WAAOyB,OAAO,CAACC,GAAR,CAAYJ,gBAAgB,CAACK,MAAjB,CAAwBC,OAAxB,EAAiCC,GAAjC,CAAqC/B,SAAS,IAAID,WAAW,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,OAArB,CAA7D,CAAZ,CAAP;AACD;AACF;;AAED,SAAS4B,OAAT,CAAiB9B,SAAjB,EAA4B;AAC1B,SAAOA,SAAS,IAAI,IAApB;AACD","sourcesContent":["import {getChildDependencyDirectories, readPackage} from './file-reader-utils';\nimport {getLicenseInfo} from './normalizer-utils';\n\nexport async function getLicenses(directory, options, baseDir = directory) {\n  const {\n    excludedDependencies = [],\n    includeDependencies = true,\n    includeDevDependencies = false,\n    depth = Infinity\n  } = options;\n  const {dependencies, devDependencies, ...packageInfo} = await readPackage(directory);\n  const currentLicense = getLicenseInfo(packageInfo);\n  const newExcludedDependencies = [...excludedDependencies, currentLicense.label];\n\n  if (excludedDependencies.includes(currentLicense.label)) {\n    return mergeLicenses(options, directory, baseDir);\n  } else {\n    const newOptions = {...options, excludedDependencies: newExcludedDependencies, depth: depth - 1};\n    const childLicenses = includeDependencies ? await getChildLicenses(dependencies, newOptions, directory, baseDir) : [];\n    const childDevLicenses = includeDevDependencies ? await getChildLicenses(devDependencies, newOptions, directory, baseDir) : [];\n    const allChildLicenses = [...childLicenses.flat(), ...childDevLicenses.flat()];\n    return mergeLicenses(newOptions, directory, baseDir, currentLicense, allChildLicenses);\n  }\n}\n\nfunction mergeLicenses(options, directory, baseDir, currentLicense, childLicenses = []) {\n  const isSelf = directory === baseDir;\n  const {excludeSelf = true} = options;\n  if ((isSelf && excludeSelf) || currentLicense == null) {\n    return childLicenses;\n  } else {\n    return [currentLicense, ...childLicenses];\n  }\n}\n\nasync function getChildLicenses(dependencies, options, directory, baseDir) {\n  const {depth} = options;\n  if (depth === 0 || dependencies == null) {\n    return [];\n  } else {\n    const childDirectories = await getChildDependencyDirectories(Object.keys(dependencies), directory, baseDir);\n    return Promise.all(childDirectories.filter(isFound).map(directory => getLicenses(directory, options, baseDir)));\n  }\n}\n\nfunction isFound(directory) {\n  return directory != null;\n}\n\n"],"file":"license-utils.js"}